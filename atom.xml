<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-01T08:59:05.450Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/03/01/hello-world0/"/>
    <id>http://yoursite.com/2020/03/01/hello-world0/</id>
    <published>2020-03-01T08:59:05.450Z</published>
    <updated>2020-03-01T08:59:05.450Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PowerMock兼容Jacoco实践</title>
    <link href="http://yoursite.com/2020/02/23/hello-world/"/>
    <id>http://yoursite.com/2020/02/23/hello-world/</id>
    <published>2020-02-23T06:06:30.678Z</published>
    <updated>2020-03-02T14:29:35.844Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>多个项目组反应本地IDEA和jenkins运用Jacoco检测代码覆盖率时，测试类在有测试代码覆盖的前提下，显示覆盖率为0。</p><h3 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h3><p>JaCoCo支持两种方式检测覆盖率：a）在使用Java代理时动态进行；b）在构建阶段准备类时，脱机进行离线操作。<br>使用JaCoCo Java Agent进行即时检测，加载类时会对其进行修改。但PowerMock内部是从磁盘读取类，则所有JaCoCo更改都会消失。导致PowerMock的零覆盖率。<br>使用离线Instrumentation。修改后的类存储在磁盘上，可以实现覆盖率检测。但需更改构建过程，并且只能从构建工具maven运行测试才能收集代码覆盖率。(不建议)</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="编写BaseRuleMock基类"><a href="#编写BaseRuleMock基类" class="headerlink" title="编写BaseRuleMock基类"></a>编写BaseRuleMock基类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseRuleMock</span></span>&#123;</span><br><span class="line">  <span class="meta">@Rule</span></span><br><span class="line">  <span class="keyword">public</span> PowerMockRule rule = <span class="keyword">new</span> PowerMockRule();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span>&#123;</span><br><span class="line">    PowerMockAgent.initializeIfNeeded();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="继承BaseRuleMock基类，去掉原有-RunWith-PowerMockRunner-class-注解"><a href="#继承BaseRuleMock基类，去掉原有-RunWith-PowerMockRunner-class-注解" class="headerlink" title="继承BaseRuleMock基类，去掉原有@RunWith(PowerMockRunner.class)注解"></a>继承BaseRuleMock基类，去掉原有@RunWith(PowerMockRunner.class)注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PrepareForTest</span>(&#123;UploadUtil<span class="class">.<span class="keyword">class</span>&#125;)</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">XxxxTest</span> <span class="keyword">extends</span> <span class="title">BaseRuleMock</span></span>&#123;</span><br><span class="line">  <span class="meta">@InjectMocks</span></span><br><span class="line">  <span class="keyword">private</span> AxxxManager axxxManager;</span><br><span class="line">  <span class="meta">@Mock</span></span><br><span class="line">  <span class="keyword">private</span> AxxxMapper axxxMapper;</span><br><span class="line">  <span class="meta">@Test</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> MethodTest&#123;</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在maven-surefire-plugin添加如下配置，取消校验"><a href="#在maven-surefire-plugin添加如下配置，取消校验" class="headerlink" title="在maven-surefire-plugin添加如下配置，取消校验"></a>在maven-surefire-plugin添加如下配置，取消校验</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">　　  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">　　  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">　　  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.18.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">　　  <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">argLine</span>&gt;</span></span><br><span class="line">          <span class="comment">&lt;!-- jdk7则需改成-XX:-UseSplitVerifier --&gt;</span></span><br><span class="line">          -noverify $&#123;maven.test.jvmArgs&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">argLine</span>&gt;</span></span><br><span class="line">　　  <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="集成jenkins"><a href="#集成jenkins" class="headerlink" title="集成jenkins"></a>集成jenkins</h3><p><img src="jenkins.png" alt=""></p><h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><p>####IDEA<br>略<br>####JENKINS<br>略</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h2&gt;&lt;p&gt;多个项目组反应本地IDEA和jenkins运用Jacoco检测代码覆盖率时，测试类在有测试代码覆盖的前提下，显示覆盖率为0。
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
